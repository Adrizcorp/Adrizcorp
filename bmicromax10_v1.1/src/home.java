/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fabian Humberto Castillo pineda
 */
import javax.swing.JOptionPane;

import com.sun.awt.AWTUtilities; 
import java.awt.FileDialog;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
public class home extends javax.swing.JFrame 
{

    /**
     * Creates new form home
     */
    public home() {
       
      
                //getContentPane().setComponentZOrder(this.jTabbedPane1, 0);
                
            /*  Point p = MouseInfo.getPointerInfo().getLocation();
              
              System.out.println("x : " + p.x + " Y : " + p.y);
              */
        initComponents();
        this.setTitle("Bemicro max 10");
        Date fecha1 = new Date ();
   Calendar cal = new GregorianCalendar(); 
        


  
 
  jLabel7.setText(fecha1.toLocaleString());
 
    }
    @Override
    public Image getIconImage()
    {
    
    Image icon_app = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/ram-chip-del-procesador-icono-5844-128.png"));
        return icon_app;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        textField1 = new java.awt.TextField();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/code.png"))); // NOI18N
        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 153));
        setIconImage(getIconImage());
        setPreferredSize(new java.awt.Dimension(950, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1680, 1050));
        getContentPane().setLayout(null);

        jTabbedPane1.setBackground(new java.awt.Color(153, 153, 153));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 51, 51)));
        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setLayout(null);

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        jPanel2.add(textField1);
        textField1.setBounds(260, 10, 230, 30);

        jPanel3.setBackground(new java.awt.Color(204, 161, 124));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Especificaciones", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Aharoni", 1, 18), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel3.setLayout(null);

        jCheckBox1.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox1.setLabel("LEDx8");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox1);
        jCheckBox1.setBounds(340, 40, 76, 23);

        jCheckBox11.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox11.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox11.setText("Puerto D (PMOD)");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox11);
        jCheckBox11.setBounds(170, 130, 160, 23);

        jCheckBox2.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox2.setText("Accelerometer");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox2);
        jCheckBox2.setBounds(30, 130, 140, 23);

        jCheckBox5.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox5.setLabel("12 bit Dac");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox5);
        jCheckBox5.setBounds(340, 100, 140, 23);

        jCheckBox6.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox6.setText("GPIO_0");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox6);
        jCheckBox6.setBounds(30, 40, 90, 23);

        jCheckBox7.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox7.setText("GPIO_1");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox7);
        jCheckBox7.setBounds(30, 70, 106, 23);

        jCheckBox8.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox8.setText("GPIO_3(80 pin)");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox8);
        jCheckBox8.setBounds(30, 100, 140, 23);

        jCheckBox3.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox3.setText("Puerto A (PMOD)");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox3);
        jCheckBox3.setBounds(170, 40, 160, 23);

        jCheckBox9.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox9.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox9.setText("Puerto B (PMOD)");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox9);
        jCheckBox9.setBounds(170, 70, 160, 23);

        jCheckBox10.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox10.setText("Puerto C (PMOD)");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox10);
        jCheckBox10.setBounds(170, 100, 160, 23);

        jCheckBox12.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox12.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox12.setText("4 Swicth");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox12);
        jCheckBox12.setBounds(340, 70, 93, 23);

        jCheckBox13.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox13.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox13.setLabel("Temperature");
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox13);
        jCheckBox13.setBounds(430, 40, 130, 23);

        jCheckBox14.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox14.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox14.setText("Memoria Flash(16 Mb)");
        jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox14ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox14);
        jCheckBox14.setBounds(340, 130, 200, 23);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/image28.png"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 204)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(510, 160, 40, 40);

        jCheckBox15.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox15.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox15.setText("Sdram(8Mb)");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox15);
        jCheckBox15.setBounds(30, 160, 120, 23);

        jCheckBox16.setBackground(new java.awt.Color(204, 161, 124));
        jCheckBox16.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jCheckBox16.setText("adc(inputs) ");
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox16);
        jCheckBox16.setBounds(170, 160, 160, 23);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(10, 50, 560, 210);

        jLabel10.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nombre del Proyecto : ");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(20, 10, 250, 30);

        jButton1.setBackground(new java.awt.Color(153, 51, 255));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/diseno-icono-5745-32.png"))); // NOI18N
        jButton1.setText("Generar");
        jButton1.setToolTipText("");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, java.awt.Color.green));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(210, 290, 180, 40);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/B_digitaluni_ackk6u6r.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(0, 0, 630, 390);

        jTabbedPane1.addTab("Configuracion_1", jPanel2);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel12.setBackground(new java.awt.Color(102, 204, 255));
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pego6.png"))); // NOI18N
        jPanel1.add(jLabel12);
        jLabel12.setBounds(0, 0, 620, 390);

        jTabbedPane1.addTab("Componentes", jPanel1);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Zapf Dingbats", 1, 48)); // NOI18N
        jLabel3.setText("CodeRing®  ");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(150, 130, 310, 100);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fuego.gif"))); // NOI18N
        jPanel4.add(jLabel4);
        jLabel4.setBounds(90, 70, 60, 150);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fuego.gif"))); // NOI18N
        jPanel4.add(jLabel5);
        jLabel5.setBounds(410, 90, 60, 120);

        jTabbedPane1.addTab("Creditos", jPanel4);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(290, 120, 610, 420);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lol2.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 100, 260, 430);

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Inicio el dia : ");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(30, 610, 100, 40);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("asfasfa");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(130, 620, 300, 20);

        jLabel2.setFont(new java.awt.Font("Chalkduster", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 153, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/te.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(jLabel2);
        jLabel2.setBounds(320, 10, 500, 80);

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/code11.png"))); // NOI18N
        getContentPane().add(jLabel11);
        jLabel11.setBounds(800, 580, 100, 70);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/seanalanthomas_1334804007_89.jpg"))); // NOI18N
        jLabel6.setToolTipText("");
        jLabel6.setName("fondo"); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, -120, 1680, 1280);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // parent component of the dialog
/*JFrame parentFrame = new JFrame();
 
JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Specify a file to save");   
 
int userSelection = fileChooser.showSaveDialog(parentFrame);
 
if (userSelection == JFileChooser.APPROVE_OPTION) {
    File fileToSave = fileChooser.getSelectedFile();
    System.out.println("Save as file: " + fileToSave.getAbsolutePath());
}   */
        
        
        File directorio=new File(textField1.getText()); 
     directorio.mkdir(); 
     
        
archivar arch = new archivar();






 /* FileDialog fd = new FileDialog(this,"Guardar en : ", FileDialog.SAVE);
            fd.setVisible(true);
          
            
    String filename = fd.getFile();*/

            //String filename = fd.saveFile();


//fd.saveFile(new Frame(), "Save...", ".\\", "*.java"));

   ///************************************************** EMPIEZA ARCVIGO .V ****************************************************************************************************
    File archivo_v = new File(directorio.getAbsoluteFile()+"/"+textField1.getText()+".v");
       
        BufferedWriter bw_v;
    
    
     
        
        String texto = "// --------------------------------------------------------------------\n" +
"// Copyright (c) 2015 by Semillero ADT. \n" +
"// --------------------------------------------------------------------\n" +
"//\n" +
"// --------------------------------------------------------------------\n" +
"//\n" +
"//                     web: https://sites.google.com/site/semilleroadt/\n" +
"//                     email: semilleroadtupb@gmail.com\n" +
"//\n" +
"// --------------------------------------------------------------------\n" +
"//\n" +
"// Major Functions:	BE-MICRO MAX10 TOP\n" +
"//\n" +
"// --------------------------------------------------------------------\n" +
"//\n" +
"// Revision History :\n" +
"// --------------------------------------------------------------------\n" +
"//   Ver  :| Author:Fabian Humberto Castillo Pineda | Mod. Date :"+jLabel7.getText()+"\n"
+ "//| Changes Made:\n" +
"\n" +
"// --------------------------------------------------------------------\n" +
"\n" +
"\n" +
"\n" +
"module "+textField1.getText()+"( //CLOCKS\n" +
"						CLK_50,\n" +
"						USER_CLK,\n" +
"						\n" ;
               
     
        
        
    if(jCheckBox1.isSelected() == true )
    { 
        texto = texto +"                                                //LED\n" +
"						LED,\n\n ";
    }
    
    if(jCheckBox12.isSelected() == true)
    {
    
        texto = texto+ "                                             //SW\n" +
     "						SW,\n\n";
        
    }
    if(jCheckBox14.isSelected() == true)
{

    texto = texto + "			                            //FLASH\n" +
"						SFLASH_DCLK,\n" +
"						SFLASH_ASDI,\n" +
"						SFLASH_CSn, \n" +
"						SFLASH_DATA,\n\n";

}
    
    if(jCheckBox5.isSelected() == true)
    {
    
    texto  = texto + "                                               //AD5681R\n" +
"						AD5681R_LDACn,\n" +
"						AD5681R_RSTn,\n" +
"						AD5681R_SCL,\n" +
"						AD5681R_SDA,\n" +
"						AD5681R_SYNCn,\n\n";
    }
    
    if(jCheckBox2.isSelected() == true)
    {
    
          texto = texto +
"						           //ACCELEROMETER\n" +
"						ADXL362_CSn, \n" +
"						ADXL362_MISO,\n" +
"						ADXL362_MOSI,\n" +
"						ADXL362_SCLK,\n" +
"						ADXL362_INT1,\n" +
"						ADXL362_INT2,\n" +
"\n\n";

    
    
    }
    if(jCheckBox13.isSelected() ==true)
    {
    
    texto = texto + "                                         //ADT7420 Temperature Sensor\n" +
"						ADT7420_CT,\n" +
"						ADT7420_INT,\n" +
"						ADT7420_SCL,\n" +
"						ADT7420_SDA,\n\n";
    
        
    
    }
    if(jCheckBox15.isSelected() == true)
    {
    
    texto = texto + "                                            //SDRAM\n" +
"						SDRAM_A,\n" +
"						SDRAM_BA,\n" +
"						SDRAM_CASn,\n" +
"						SDRAM_CKE,\n" +
"						SDRAM_CLK,\n" +
"						SDRAM_CSn,\n" +
"						SDRAM_DQ,\n" +
"						SDRAM_RASn,\n" +
"						SDRAM_WEn,\n" +
"						SDRAM_DQM,\n\n";
    
    
    }
    
    
    if(jCheckBox3.isSelected() == true)
    {
  
        texto = texto + "                                          //PMOD_A\n" +
"						PMOD_A,\n\n";
        
        
        
    
    
    }
    
    
    if(jCheckBox9.isSelected() == true)
    {
    
    texto = texto + "                                              //PMOD_B\n" +
"						PMOD_B,\n\n";
        
        
    
    }
    
    
    if(jCheckBox10.isSelected() == true)
    {
    texto = texto + "                                             //PMOD_C\n" +
"						PMOD_C,\n\n";
    
    
    }
    
    if(jCheckBox11.isSelected() == true)
    {
    
        
        
        texto = texto + "                                         //PMOD_D\n" +
"						PMOD_D,\n\n";
    
    
    }
    
    
    if(jCheckBox6.isSelected() == true)
    {
    
        texto = texto + "                                        //GPIO_0/DIFF\n" +
"						GPIO_0,\n\n";
    
    }
    
    
    
    if(jCheckBox7.isSelected() == true)
    {
    
    texto = texto +"                                          //GPIO_1/LVDS\n" +
"						GPIO_1,\n\n";
    
    }
    
    
    if(jCheckBox8.isSelected() == true)
    {
        
        texto = texto + "                                       //GPIO_2/EG\n" +
"						GPIO_2 \n\n";
        
        
        
    }
    texto = texto + ");\n\n\n\n";

    
    texto = texto + "//CLOCKS\n" +
"input CLK_50;\n" +
"input USER_CLK;\n\n";
if(jCheckBox1.isSelected() == true )
    { 
        texto = texto + "//LED\n" +
"output [7:0]LED;\n\n";
    }
 

if(jCheckBox12.isSelected() == true)
    {
    
        texto = texto+ "//SW\n" +
"input [3:0]SW;\n\n";

        
    }


    if(jCheckBox14.isSelected() == true)
{

    texto = texto + "//FLASH\n" +
"output SFLASH_DCLK;\n" +
"output SFLASH_ASDI;\n" +
"output SFLASH_CSn;\n" +
"input SFLASH_DATA;\n\n";
}
    
    if(jCheckBox5.isSelected()==true)
    {
    texto = texto + "//AD5681R\n" +
"output AD5681R_LDACn;\n" +
"output AD5681R_RSTn;\n" +
"output AD5681R_SCL;\n" +
"output AD5681R_SDA;\n" +
"output AD5681R_SYNCn;\n\n";
    
    }
 if(jCheckBox2.isSelected() == true)
    {
    
          texto = texto + "//ACCELEROMETER\n" +
"output ADXL362_CSn;\n" +
"input ADXL362_MISO;\n" +
"output ADXL362_MOSI;\n" +
"output ADXL362_SCLK;\n" +
"input ADXL362_INT1;\n" +
"input ADXL362_INT2;\n\n";

    
    
    }
 
 if(jCheckBox13.isSelected() ==true)
    {
    
    texto = texto + "//ADT7420 Temperature Sensor\n" +
"inout ADT7420_SCL;\n" +
"inout ADT7420_SDA;\n" +
"inout ADT7420_CT;\n" +
"input ADT7420_INT;\n\n";
    
        
    
    }
    if(jCheckBox15.isSelected() == true)
    {
    
    texto = texto + "//SDRAM\n" +
"output [12:0]SDRAM_A;\n" +
"output [1:0]SDRAM_BA;\n" +
"output SDRAM_CASn;\n" +
"output SDRAM_CKE;\n" +
"output SDRAM_CLK;\n" +
"output SDRAM_CSn;\n" +
"inout [15:0]SDRAM_DQ;\n" +
"output SDRAM_RASn;\n" +
"output SDRAM_WEn;\n" +
"output [1:0]SDRAM_DQM;\n\n";
    
    
    }
    if(jCheckBox3.isSelected() == true)
    {
  
        texto = texto + "//PMOD_A\n" +
"inout [3:0]PMOD_A;\n\n";
        
        
        
    
    
    }
     
    if(jCheckBox9.isSelected() == true)
    {
    
    texto = texto + "//PMOD_B\n" +
"inout [3:0]PMOD_B;\n\n";
        
        
    
    }

     
    if(jCheckBox10.isSelected() == true)
    {
    texto = texto + "//PMOD_C\n" +
"inout [3:0]PMOD_C;\n\n";
    
    
    }
     if(jCheckBox11.isSelected() == true)
    {
    
        
        
        texto = texto + "//PMOD_D\n" +
"inout [3:0]PMOD_D;\n\n";
    
    
    }
      
    if(jCheckBox6.isSelected() == true)
    {
    
        texto = texto + "//GPIO_0/DIFF/J3\n" +
"inout [35:0]GPIO_0;\n\n";
    
    }
     if(jCheckBox7.isSelected() == true)
    {
    
    texto = texto + "//GPIO_1/LVDS/J4\n" +
"inout [27:0]GPIO_1;\n\n";
    }
      if(jCheckBox8.isSelected() == true)
    {
        
        texto = texto + "//GPIO_2/EG\n" +
"inout [55:0]GPIO_2;\n\n";
        
        
        
    }
    texto = texto + "//=======================================================\n" +
"//  REG/WIRE declarations\n" +
"//======================================================= \n\n "
            + "//=======================================================\n" +
"//  Structural coding\n" +
"//======================================================= \n\n "
  + " //assign GPIO_2[55:0]=56'd0; \n\n "
            + "endmodule   ";
    
    
    
      try{
                bw_v = new BufferedWriter(new FileWriter(archivo_v)); //filewrite esrescribe dentro del archivo
           
             bw_v.write(texto);
         bw_v.close();
            
            } catch (IOException ex) {
               
                
                System.out.print("Error archivo 1  : " + ex);
            }
       
    
    
        
 File archivo_01 = new File(directorio.getAbsoluteFile()+"/"+textField1.getText()+".qsf");
       
        BufferedWriter bw1_1_1;
        
        
        String texto_qsf="# -------------------------------------------------------------------------- #\n" +
"#\n" +
"# Copyright (C) 1991-2014 Altera Corporation. All rights reserved.\n" +
"# Your use of Altera Corporation's design tools, logic functions \n" +
"# and other software and tools, and its AMPP partner logic \n" +
"# functions, and any output files from any of the foregoing \n" +
"# (including device programming or simulation files), and any \n" +
"# associated documentation or information are expressly subject \n" +
"# to the terms and conditions of the Altera Program License \n" +
"# Subscription Agreement, the Altera Quartus II License Agreement,\n" +
"# the Altera MegaCore Function License Agreement, or other \n" +
"# applicable license agreement, including, without limitation, \n" +
"# that your use is for the sole purpose of programming logic \n" +
"# devices manufactured by Altera and sold by Altera or its \n" +
"# authorized distributors.  Please refer to the applicable \n" +
"# agreement for further details.\n" +
"#\n" +
"# -------------------------------------------------------------------------- #\n" +
"#\n" +
"# Quartus II 64-Bit\n" +
"# Version 14.0.2 Build 209 09/17/2014 SJ Web Edition\n" +
"# Date created = "+jLabel7.getText()+"\n" +
"#\n" +
"# -------------------------------------------------------------------------- #\n" +
"#\n" +
"# Notes:\n" +
"#\n" +
"# 1) The default values for assignments are stored in the file:\n" +
"#		"+textField1.getText()+"_assignment_defaults.qdf\n" +
"#    If this file doesn't exist, see file:\n" +
"#		assignment_defaults.qdf\n" +
"#\n" +
"# 2) Altera recommends that you do not modify this file. This\n" +
"#    file is updated automatically by the Quartus II software\n" +
"#    and any changes you make may be lost or overwritten.\n" +
"#\n" +
"# -------------------------------------------------------------------------- #\n" +
"\n" +
"\n" +
"set_global_assignment -name FAMILY \"MAX 10 FPGA\"\n" +
"set_global_assignment -name DEVICE 10M08DAF484C8GES\n" +
"set_global_assignment -name TOP_LEVEL_ENTITY "+textField1.getText()+"\n" +
"set_global_assignment -name ORIGINAL_QUARTUS_VERSION 14.0\n" +
"set_global_assignment -name PROJECT_CREATION_TIME_DATE \""+jLabel7.getText()+"\"\n" +
"set_global_assignment -name LAST_QUARTUS_VERSION 14.1.0\n" +
"set_global_assignment -name PROJECT_OUTPUT_DIRECTORY output_files\n" +
"set_global_assignment -name MIN_CORE_JUNCTION_TEMP 0\n" +
"set_global_assignment -name MAX_CORE_JUNCTION_TEMP 85\n" +
"set_global_assignment -name DEVICE_FILTER_PACKAGE FBGA\n" +
"set_global_assignment -name DEVICE_FILTER_PIN_COUNT 484\n" +
"set_global_assignment -name DEVICE_FILTER_SPEED_GRADE 8\n" +
"set_global_assignment -name ERROR_CHECK_FREQUENCY_DIVISOR 2\n" +
"set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -section_id Top\n" +
"set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -section_id Top\n" +
"set_global_assignment -name PARTITION_COLOR 16764057 -section_id Top\n" +
"\n" +
"#CLOCKS\n" +
"set_location_assignment PIN_N14 -to CLK_50 -tag platfrom\n" +
"set_location_assignment PIN_N15 -to USER_CLK -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to CLK_50 -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to USER_CLK -tag platfrom\n\n" +
"\n";
        
        if(jCheckBox1.isSelected() == true )
    { 
        
        texto_qsf = texto_qsf  + "#LED\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[7] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[6] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[5] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[4] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to LED[0] -tag platfrom\n" +
"set_location_assignment PIN_M2 -to LED[0] -tag platfrom\n" +
"set_location_assignment PIN_N1 -to LED[1] -tag platfrom\n" +
"set_location_assignment PIN_R2 -to LED[2] -tag platfrom\n" +
"set_location_assignment PIN_T1 -to LED[3] -tag platfrom\n" +
"set_location_assignment PIN_V4 -to LED[4] -tag platfrom\n" +
"set_location_assignment PIN_T6 -to LED[5] -tag platfrom\n" +
"set_location_assignment PIN_AB4 -to LED[6] -tag platfrom\n" +
"set_location_assignment PIN_AA5 -to LED[7] -tag platfrom\n\n";
        
    }
         if(jCheckBox12.isSelected() == true)
    {
    
        texto_qsf = texto_qsf + "#SW\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SW[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SW[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SW[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SW[0] -tag platfrom\n" +
"set_location_assignment PIN_M1 -to SW[0]\n" +
"set_location_assignment PIN_R1 -to SW[1]\n" +
"set_location_assignment PIN_V5 -to SW[2]\n" +
"set_location_assignment PIN_AB5 -to SW[3]\n\n";
        
    }
            if(jCheckBox14.isSelected() == true)
{

    texto_qsf = texto_qsf + "#FLASH\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SFLASH_DCLK -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SFLASH_CSn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SFLASH_DATA -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SFLASH_ASDI -tag platfrom\n" +
"set_location_assignment PIN_P11 -to SFLASH_DCLK -tag platfrom\n" +
"set_location_assignment PIN_R11 -to SFLASH_ASDI -tag platfrom\n" +
"set_location_assignment PIN_R10 -to SFLASH_CSn -tag platfrom\n" +
"set_location_assignment PIN_P10 -to SFLASH_DATA -tag platfrom\n\n";

}
   if(jCheckBox5.isSelected() == true)
   {
              texto_qsf = texto_qsf + "#AD5681R/DAC12-bit\n" +
"set_location_assignment PIN_N18 -to AD5681R_LDACn -tag platfrom\n" +
"set_location_assignment PIN_L15 -to AD5681R_RSTn -tag platfrom\n" +
"set_location_assignment PIN_G17 -to AD5681R_SCL -tag platfrom\n" +
"set_location_assignment PIN_H17 -to AD5681R_SDA -tag platfrom\n" +
"set_location_assignment PIN_N19 -to AD5681R_SYNCn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to AD5681R_LDACn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to AD5681R_RSTn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to AD5681R_SCL -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to AD5681R_SDA -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to AD5681R_SYNCn -tag platfrom\n\n";
   }
               if(jCheckBox13.isSelected() ==true)
    {
    
    			 texto_qsf = texto_qsf + "#ADT7420 Temperature Sensor I2C\n" +
"set_location_assignment PIN_P13 -to ADT7420_CT -tag platfrom\n" +
"set_location_assignment PIN_AB14 -to ADT7420_INT -tag platfrom\n" +
"set_location_assignment PIN_W13 -to ADT7420_SCL -tag platfrom\n" +
"set_location_assignment PIN_R13 -to ADT7420_SDA -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADT7420_CT -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADT7420_INT -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADT7420_SCL -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADT7420_SDA -tag platfrom\n\n";
    
        
    
    }
    if(jCheckBox2.isSelected() == true)
    {
    
texto_qsf = texto_qsf + "#ACCELEROMETER\n" +
"set_location_assignment PIN_L14 -to ADXL362_CSn -tag platfrom\n" +
"set_location_assignment PIN_L18 -to ADXL362_MISO -tag platfrom\n" +
"set_location_assignment PIN_L19 -to ADXL362_MOSI -tag platfrom\n" +
"set_location_assignment PIN_M18 -to ADXL362_SCLK -tag platfrom\n" +
"set_location_assignment PIN_M15 -to ADXL362_INT1 -tag platfrom\n" +
"set_location_assignment PIN_M14 -to ADXL362_INT2 -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADXL362_CSn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADXL362_MISO -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADXL362_MOSI -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADXL362_SCLK -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADXL362_INT1 -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to ADXL362_INT2 -tag platfrom\n\n" +
"";
    
    
    }
    if(jCheckBox15.isSelected() == true)
    {
    
    		texto_qsf = texto_qsf + "#SDRAM\n" +
	"set_location_assignment PIN_T20 -to SDRAM_A[0] -tag platfrom\n" +
"set_location_assignment PIN_T19 -to SDRAM_A[1] -tag platfrom\n" +
"set_location_assignment PIN_T18 -to SDRAM_A[2] -tag platfrom\n" +
"set_location_assignment PIN_AA21 -to SDRAM_A[3] -tag platfrom\n" +
"set_location_assignment PIN_AA22 -to SDRAM_A[4] -tag platfrom\n" +
"set_location_assignment PIN_U22 -to SDRAM_A[5] -tag platfrom\n" +
"set_location_assignment PIN_T22 -to SDRAM_A[6] -tag platfrom\n" +
"set_location_assignment PIN_R22 -to SDRAM_A[7] -tag platfrom\n" +
"set_location_assignment PIN_P20 -to SDRAM_A[8] -tag platfrom\n" +
"set_location_assignment PIN_P22 -to SDRAM_A[9] -tag platfrom\n" +
"set_location_assignment PIN_U21 -to SDRAM_A[10] -tag platfrom\n" +
"set_location_assignment PIN_P19 -to SDRAM_A[11] -tag platfrom\n" +
"set_location_assignment PIN_N20 -to SDRAM_A[12] -tag platfrom\n" +
"set_location_assignment PIN_R20 -to SDRAM_BA[0] -tag platfrom\n" +
"set_location_assignment PIN_T21 -to SDRAM_BA[1] -tag platfrom\n" +
"set_location_assignment PIN_N21 -to SDRAM_CASn -tag platfrom\n" +
"set_location_assignment PIN_N22 -to SDRAM_CKE -tag platfrom\n" +
"set_location_assignment PIN_M22 -to SDRAM_CLK -tag platfrom\n" +
"set_location_assignment PIN_P21 -to SDRAM_CSn -tag platfrom\n" +
"set_location_assignment PIN_C22 -to SDRAM_DQ[0] -tag platfrom\n" +
"set_location_assignment PIN_D22 -to SDRAM_DQ[1] -tag platfrom\n" +
"set_location_assignment PIN_E22 -to SDRAM_DQ[2] -tag platfrom\n" +
"set_location_assignment PIN_F22 -to SDRAM_DQ[3] -tag platfrom\n" +
"set_location_assignment PIN_G22 -to SDRAM_DQ[4] -tag platfrom\n" +
"set_location_assignment PIN_H22 -to SDRAM_DQ[5] -tag platfrom\n" +
"set_location_assignment PIN_J22 -to SDRAM_DQ[6] -tag platfrom\n" +
"set_location_assignment PIN_K22 -to SDRAM_DQ[7] -tag platfrom\n" +
"set_location_assignment PIN_K21 -to SDRAM_DQ[8] -tag platfrom\n" +
"set_location_assignment PIN_J21 -to SDRAM_DQ[9] -tag platfrom\n" +
"set_location_assignment PIN_H21 -to SDRAM_DQ[10] -tag platfrom\n" +
"set_location_assignment PIN_G20 -to SDRAM_DQ[11] -tag platfrom\n" +
"set_location_assignment PIN_F21 -to SDRAM_DQ[12] -tag platfrom\n" +
"set_location_assignment PIN_E21 -to SDRAM_DQ[13] -tag platfrom\n" +
"set_location_assignment PIN_D21 -to SDRAM_DQ[14] -tag platfrom\n" +
"set_location_assignment PIN_C21 -to SDRAM_DQ[15] -tag platfrom\n" +
"set_location_assignment PIN_M20 -to SDRAM_RASn -tag platfrom\n" +
"set_location_assignment PIN_M21 -to SDRAM_WEn -tag platfrom\n" +
"set_location_assignment PIN_L20 -to SDRAM_DQM[0] -tag platfrom\n" +
"set_location_assignment PIN_L22 -to SDRAM_DQM[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[12] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[11] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[10] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[9] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[8] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[7] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[6] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[5] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[4] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_A[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_BA[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_BA[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_CASn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_RASn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_CKE -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_CLK -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_CSn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_WEn -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[15] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[14] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[13] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[12] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[11] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[10] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[9] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[8] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[7] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[6] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[5] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[4] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQ[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQM[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to SDRAM_DQM[0] -tag platfrom\n\n";
    
    }
     if(jCheckBox3.isSelected() == true)
    {
  
        texto_qsf = texto_qsf + "#PMOA\n" +
"set_location_assignment PIN_C20 -to PMOD_A[0] -tag platfrom\n" +
"set_location_assignment PIN_D19 -to PMOD_A[1] -tag platfrom\n" +
"set_location_assignment PIN_D18 -to PMOD_A[2] -tag platfrom\n" +
"set_location_assignment PIN_E18 -to PMOD_A[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_A[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_A[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_A[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_A[3] -tag platfrom\n\n";
    
    
    }
    
    
    if(jCheckBox9.isSelected() == true)
    {
    
        texto_qsf = texto_qsf + "#PMOB\n" +
"set_location_assignment PIN_E19 -to PMOD_B[0] -tag platfrom\n" +
"set_location_assignment PIN_F18 -to PMOD_B[1] -tag platfrom\n" +
"set_location_assignment PIN_F20 -to PMOD_B[2] -tag platfrom\n" +
"set_location_assignment PIN_G19 -to PMOD_B[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_B[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_B[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_B[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_B[3] -tag platfrom\n\n";
        
    
    }
    
    
    if(jCheckBox10.isSelected() == true)
    {
  texto_qsf = texto_qsf + "#PMOC\n" +
"set_location_assignment PIN_U18 -to PMOD_C[0] -tag platfrom\n" +
"set_location_assignment PIN_U17 -to PMOD_C[1] -tag platfrom\n" +
"set_location_assignment PIN_R18 -to PMOD_C[2] -tag platfrom\n" +
"set_location_assignment PIN_P18 -to PMOD_C[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_C[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_C[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_C[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_C[3] -tag platfrom\n\n";
    
    
    }
    
    if(jCheckBox11.isSelected() == true)
    {
    
     texto_qsf = texto_qsf + "#PMOD\n" +
"set_location_assignment PIN_R14 -to PMOD_D[0] -tag platfrom\n" +
"set_location_assignment PIN_R15 -to PMOD_D[1] -tag platfrom\n" +
"set_location_assignment PIN_P15 -to PMOD_D[2] -tag platfrom\n" +
"set_location_assignment PIN_P14 -to PMOD_D[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_D[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_D[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_D[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to PMOD_D[3] -tag platfrom\n\n";   
    
    
    }
    if(jCheckBox16.isSelected() == true)
    {
    texto_qsf = texto_qsf + "#ANALOG inputs\n" +
"set_location_assignment PIN_F5 -to AIN[0]\n" +
"set_location_assignment PIN_E4 -to AIN[1]\n" +
"set_location_assignment PIN_F4 -to AIN[2]\n" +
"set_location_assignment PIN_E3 -to AIN[3]\n" +
"set_location_assignment PIN_J8 -to AIN[4]\n" +
"set_location_assignment PIN_G4 -to AIN[5]\n" +
"set_location_assignment PIN_J9 -to AIN[6]\n" +
"set_location_assignment PIN_F3 -to AIN[7]\n\n";
    }
    
    if(jCheckBox6.isSelected() == true)
    {
    
    texto_qsf = texto_qsf + "#DIFF/GPIO_0/J3\n" +
"set_location_assignment PIN_B2 -to GPIO_0[0] -tag platfrom\n" +
"set_location_assignment PIN_B1 -to GPIO_0[1] -tag platfrom\n" +
"set_location_assignment PIN_C3 -to GPIO_0[2] -tag platfrom\n" +
"set_location_assignment PIN_A2 -to GPIO_0[3] -tag platfrom\n" +
"set_location_assignment PIN_B3 -to GPIO_0[4] -tag platfrom\n" +
"set_location_assignment PIN_A3 -to GPIO_0[5] -tag platfrom\n" +
"set_location_assignment PIN_B4 -to GPIO_0[6] -tag platfrom\n" +
"set_location_assignment PIN_A4 -to GPIO_0[7] -tag platfrom\n" +
"set_location_assignment PIN_B5 -to GPIO_0[8] -tag platfrom\n" +
"set_location_assignment PIN_A5 -to GPIO_0[9] -tag platfrom\n" +
"set_location_assignment PIN_B7 -to GPIO_0[10] -tag platfrom\n" +
"set_location_assignment PIN_A6 -to GPIO_0[11] -tag platfrom\n" +
"set_location_assignment PIN_A7 -to GPIO_0[12] -tag platfrom\n" +
"set_location_assignment PIN_A8 -to GPIO_0[13] -tag platfrom\n" +
"set_location_assignment PIN_A9 -to GPIO_0[14] -tag platfrom\n" +
"set_location_assignment PIN_B8 -to GPIO_0[15] -tag platfrom\n" +
"set_location_assignment PIN_B10 -to GPIO_0[16] -tag platfrom\n" +
"set_location_assignment PIN_C9 -to GPIO_0[17] -tag platfrom\n" +
"set_location_assignment PIN_H12 -to GPIO_0[18] -tag platfrom\n" +
"set_location_assignment PIN_J11 -to GPIO_0[19] -tag platfrom\n" +
"set_location_assignment PIN_E12 -to GPIO_0[20] -tag platfrom\n" +
"set_location_assignment PIN_D13 -to GPIO_0[21] -tag platfrom\n" +
"set_location_assignment PIN_D14 -to GPIO_0[22] -tag platfrom\n" +
"set_location_assignment PIN_E13 -to GPIO_0[23] -tag platfrom\n" +
"set_location_assignment PIN_A14 -to GPIO_0[24] -tag platfrom\n" +
"set_location_assignment PIN_B14 -to GPIO_0[25] -tag platfrom\n" +
"set_location_assignment PIN_C14 -to GPIO_0[26] -tag platfrom\n" +
"set_location_assignment PIN_C13 -to GPIO_0[27] -tag platfrom\n" +
"set_location_assignment PIN_H14 -to GPIO_0[28] -tag platfrom\n" +
"set_location_assignment PIN_J13 -to GPIO_0[29] -tag platfrom\n" +
"set_location_assignment PIN_D17 -to GPIO_0[30] -tag platfrom\n" +
"set_location_assignment PIN_C17 -to GPIO_0[31] -tag platfrom\n" +
"set_location_assignment PIN_E16 -to GPIO_0[32] -tag platfrom\n" +
"set_location_assignment PIN_E15 -to GPIO_0[33] -tag platfrom\n" +
"set_location_assignment PIN_K14 -to GPIO_0[34] -tag platfrom\n" +
"set_location_assignment PIN_K15 -to GPIO_0[35] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[4] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[5] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[6] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[7] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[8] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[9] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[10] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[11] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[12] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[13] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[14] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[15] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[16] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[17] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[18] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[19] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[20] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[21] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[22] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[23] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[24] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[25] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[26] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[27] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[28] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[29] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[30] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[31] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[32] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[33] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[34] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_0[35] -tag platfrom\n\n";

    }
    
    
    
    if(jCheckBox7.isSelected() == true)
    {
    
    texto_qsf = texto_qsf + "#LVDS/GPIOS/J4\n" +
 "set_location_assignment PIN_AA14 -to GPIO_1[0] -tag platfrom\n" +
"set_location_assignment PIN_AB15 -to GPIO_1[1] -tag platfrom\n" +
"set_location_assignment PIN_AA15 -to GPIO_1[2] -tag platfrom\n" +
"set_location_assignment PIN_Y16	 -to GPIO_1[3] -tag platfrom\n" +
"set_location_assignment PIN_W3	 -to GPIO_1[4] -tag platfrom\n" +
"set_location_assignment PIN_W4	 -to GPIO_1[5] -tag platfrom\n" +
"set_location_assignment PIN_W6	 -to GPIO_1[6] -tag platfrom\n" +
"set_location_assignment PIN_W5	 -to GPIO_1[7] -tag platfrom\n" +
"set_location_assignment PIN_U7	 -to GPIO_1[8] -tag platfrom\n" +
"set_location_assignment PIN_U6	 -to GPIO_1[9] -tag platfrom\n" +
"set_location_assignment PIN_W8	 -to GPIO_1[10] -tag platfrom\n" +
"set_location_assignment PIN_W7	 -to GPIO_1[11] -tag platfrom\n" +
"set_location_assignment PIN_AA7	 -to GPIO_1[12] -tag platfrom\n" +
"set_location_assignment PIN_AA6	 -to GPIO_1[13] -tag platfrom\n" +
"set_location_assignment PIN_V10	 -to GPIO_1[14] -tag platfrom\n" +
"set_location_assignment PIN_V9	-to GPIO_1[15] -tag platfrom\n" +
"set_location_assignment PIN_AA10 -to GPIO_1[16] -tag platfrom\n" +
"set_location_assignment PIN_Y10	 -to GPIO_1[17] -tag platfrom\n" +
"set_location_assignment PIN_Y14	-to GPIO_1[18] -tag platfrom\n" +
"set_location_assignment PIN_Y13	-to GPIO_1[19] -tag platfrom\n" +
"set_location_assignment PIN_W14	-to GPIO_1[20] -tag platfrom\n" +
"set_location_assignment PIN_V13	-to GPIO_1[21] -tag platfrom\n" +
"set_location_assignment PIN_W15	-to GPIO_1[22] -tag platfrom\n" +
"set_location_assignment PIN_V14	-to GPIO_1[23] -tag platfrom\n" +
"set_location_assignment PIN_V16	-to GPIO_1[24] -tag platfrom\n" +
"set_location_assignment PIN_U15	-to GPIO_1[25] -tag platfrom\n" +
"set_location_assignment PIN_V17	-to GPIO_1[26] -tag platfrom\n" +
"set_location_assignment PIN_W17	-to GPIO_1[27] -tag platfrom\n" +
"\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[4] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[5] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[6] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[7] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[8] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[9] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[10] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[11] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[12] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[13] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[14] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[15] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[16] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[17] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[18] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[19] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[20] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[21] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[22] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[23] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[24] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[25] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[26] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_1[27] -tag platfrom\n\n";
    
    }
    
    
    if(jCheckBox8.isSelected() == true)
    {
        
       texto_qsf = texto_qsf + "#GPIO_2/EG\n" +
"set_location_assignment PIN_C1 -to GPIO_2[0]\n" +
"set_location_assignment PIN_D2 -to GPIO_2[1]\n" +
"set_location_assignment PIN_D1 -to GPIO_2[2]\n" +
"set_location_assignment PIN_D3 -to GPIO_2[3]\n" +
"set_location_assignment PIN_E1 -to GPIO_2[4]\n" +
"set_location_assignment PIN_F2 -to GPIO_2[5]\n" +
"set_location_assignment PIN_F1 -to GPIO_2[6]\n" +
"set_location_assignment PIN_G1 -to GPIO_2[7]\n" +
"set_location_assignment PIN_H1 -to GPIO_2[8]\n" +
"set_location_assignment PIN_J1 -to GPIO_2[9]\n" +
"set_location_assignment PIN_K2 -to GPIO_2[10]\n" +
"set_location_assignment PIN_L2 -to GPIO_2[11]\n" +
"set_location_assignment PIN_N2 -to GPIO_2[12]\n" +
"set_location_assignment PIN_P3 -to GPIO_2[13]\n" +
"set_location_assignment PIN_P1 -to GPIO_2[14]\n" +
"set_location_assignment PIN_R3 -to GPIO_2[15]\n" +
"set_location_assignment PIN_T2 -to GPIO_2[16]\n" +
"set_location_assignment PIN_R4 -to GPIO_2[17]\n" +
"set_location_assignment PIN_T5 -to GPIO_2[18]\n" +
"set_location_assignment PIN_Y1 -to GPIO_2[19]\n" +
"set_location_assignment PIN_Y2 -to GPIO_2[20]\n" +
"set_location_assignment PIN_AA1 -to GPIO_2[21]\n" +
"set_location_assignment PIN_AA2 -to GPIO_2[22]\n" +
"set_location_assignment PIN_Y3 -to GPIO_2[23]\n" +
"set_location_assignment PIN_Y4 -to GPIO_2[24]\n" +
"set_location_assignment PIN_AB6 -to GPIO_2[25]\n" +
"set_location_assignment PIN_AB7 -to GPIO_2[26]\n" +
"set_location_assignment PIN_AA8 -to GPIO_2[27]\n" +
"set_location_assignment PIN_AB8 -to GPIO_2[28]\n" +
"set_location_assignment PIN_E11 -to GPIO_2[29]\n" +
"set_location_assignment PIN_E10 -to GPIO_2[30]\n" +
"set_location_assignment PIN_D9 -to GPIO_2[31]\n" +
"set_location_assignment PIN_E9 -to GPIO_2[32]\n" +
"set_location_assignment PIN_E8 -to GPIO_2[33]\n" +
"set_location_assignment PIN_D8 -to GPIO_2[34]\n" +
"set_location_assignment PIN_E6 -to GPIO_2[35]\n" +
"set_location_assignment PIN_D7 -to GPIO_2[36]\n" +
"set_location_assignment PIN_C8 -to GPIO_2[37]\n" +
"set_location_assignment PIN_C7 -to GPIO_2[38]\n" +
"set_location_assignment PIN_D6 -to GPIO_2[39]\n" +
"set_location_assignment PIN_C6 -to GPIO_2[40]\n" +
"set_location_assignment PIN_D5 -to GPIO_2[41]\n" +
"set_location_assignment PIN_C5 -to GPIO_2[42]\n" +
"set_location_assignment PIN_C4 -to GPIO_2[43]\n" +
"set_location_assignment PIN_H11 -to GPIO_2[44]\n" +
"set_location_assignment PIN_J10 -to GPIO_2[46]\n" +
"set_location_assignment PIN_M9 -to GPIO_2[47]\n" +
"set_location_assignment PIN_M8 -to GPIO_2[48]\n" +
"set_location_assignment PIN_N9 -to GPIO_2[49]\n" +
"set_location_assignment PIN_N8 -to GPIO_2[50]\n" +
"set_location_assignment PIN_N5 -to GPIO_2[51]\n" +
"set_location_assignment PIN_N4 -to GPIO_2[52]\n" +
"set_location_assignment PIN_N3 -to GPIO_2[53]\n" +
"set_location_assignment PIN_P5 -to GPIO_2[54]\n" +
"set_location_assignment PIN_P4 -to GPIO_2[55]\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[0] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[1] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[2] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[3] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[4] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[5] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[6] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[7] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[8] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[9] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[10] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[11] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[12] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[13] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[14] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[15] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[16] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[17] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[18] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[19] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[20] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[21] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[22] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[23] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[24] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[25] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[26] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[27] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[28] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[29] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[30] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[31] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[32] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[33] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[34] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[35] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[36] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[37] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[38] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[39] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[40] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[41] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[42] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[43] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[44] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[45] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[46] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[47] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[48] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[49] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[50] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[51] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[52] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[53] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[54] -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to GPIO_2[55] -tag platfrom\n\n";               
               
               
               }
    
    texto_qsf = texto_qsf + "#GLOBAL SETTINGS\n" +
"set_global_assignment -name OPTIMIZE_HOLD_TIMING \"ALL PATHS\" -tag platfrom\n" +
"set_global_assignment -name OPTIMIZE_MULTI_CORNER_TIMING ON -tag platfrom\n" +
"set_global_assignment -name FITTER_EFFORT \"STANDARD FIT\" -tag platfrom\n" +
"set_global_assignment -name STRATIX_DEVICE_IO_STANDARD \"2.5 V\" -tag platfrom\n" +
"set_global_assignment -name IOBANK_VCCIO 3.3V -section_id 8 -tag platfrom\n" +
"set_global_assignment -name IOBANK_VCCIO 3.3V -section_id 7 -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to altera_reserved_tck -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to altera_reserved_tdi -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to altera_reserved_tdo -tag platfrom\n" +
"set_instance_assignment -name IO_STANDARD \"3.3-V LVTTL\" -to altera_reserved_tms -tag platfrom\n" +
"set_global_assignment -name USE_CONFIGURATION_DEVICE OFF -tag platfrom\n" +
"set_global_assignment -name CRC_ERROR_OPEN_DRAIN OFF -tag platfrom\n" +
"set_global_assignment -name SOURCE_FILE \"BeMicro_MAX_10_-_ISSI_IS42S16400J-7TL.qprs\" -tag platfrom\n" +
"set_global_assignment -name ON_CHIP_BITSTREAM_DECOMPRESSION OFF -tag platfrom\n" +
"set_global_assignment -name OUTPUT_IO_TIMING_NEAR_END_VMEAS \"HALF VCCIO\" -rise -tag platfrom\n" +
"set_global_assignment -name OUTPUT_IO_TIMING_NEAR_END_VMEAS \"HALF VCCIO\" -fall -tag platfrom\n" +
"set_global_assignment -name OUTPUT_IO_TIMING_FAR_END_VMEAS \"HALF SIGNAL SWING\" -rise -tag platfrom\n" +
"set_global_assignment -name OUTPUT_IO_TIMING_FAR_END_VMEAS \"HALF SIGNAL SWING\" -fall -tag platfrom\n" +
"\n" +
"#OTHER SETTINGS\n" +
"set_global_assignment -name VERILOG_FILE "+textField1.getText()+".v\n" +
"set_global_assignment -name SOURCE_FILE \"BeMicro_MAX_10_-_ISSI_IS42S16400J-7TL.qprs\"\n" +
"\n" +
"set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -section_id Top";
    
        
      try{
                bw1_1_1 = new BufferedWriter(new FileWriter(archivo_01)); //filewrite esrescribe dentro del archivo
           
             bw1_1_1.write(texto_qsf);
         bw1_1_1.close();
            
            } catch (IOException ex) {
               
                
                System.out.print("Error archivo 1  : " + ex);
            }
        
          File archivo2 = new File(directorio.getAbsoluteFile()+"/"+"BeMicro_MAX_10_-_ISSI_IS42S16400J-7TL.qprs");
          
BufferedWriter bw1;
      
       
        try {
            bw1 = new BufferedWriter(new FileWriter(archivo2)); //filewrite esrescribe dentro del archivo
             bw1.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
"<ip>\n" +
" <presets version=\"12.1\">\n" +
"  <preset\n" +
"     name=\"BeMicro MAX 10 - ISSI IS42S16400J-7TL\"\n" +
"     kind=\"altera_avalon_new_sdram_controller\"\n" +
"     version=\"All\"\n" +
"     description=\"64 Mbit, 4Mx16\">\n" +
"   <parameter name=\"dataWidth\" value=\"16\" />\n" +
"   <parameter name=\"TRFC\" value=\"70.0\" />\n" +
"   <parameter name=\"initRefreshCommands\" value=\"2\" />\n" +
"   <parameter name=\"TRCD\" value=\"15.0\" />\n" +
"   <parameter name=\"numberOfChipSelects\" value=\"1\" />\n" +
"   <parameter name=\"rowWidth\" value=\"12\" />\n" +
"   <parameter name=\"casLatency\" value=\"2\" />\n" +
"   <parameter name=\"refreshPeriod\" value=\"15.625\" />\n" +
"   <parameter name=\"powerUpDelay\" value=\"100.0\" />\n" +
"   <parameter name=\"numberOfBanks\" value=\"4\" />\n" +
"   <parameter name=\"TAC\" value=\"5.4\" />\n" +
"   <parameter name=\"generateSimulationModel\" value=\"false\" />\n" +
"   <parameter name=\"TWR\" value=\"14.0\" />\n" +
"   <parameter name=\"TRP\" value=\"15.0\" />\n" +
"   <parameter name=\"columnWidth\" value=\"8\" />\n" +
"  </preset>\n" +
" </presets>\n" +
"</ip>");
             bw1.close();

        } catch (IOException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        File archivo3 = new File(directorio.getAbsoluteFile()+"/"+textField1.getText()+".qpf");
          

      
        BufferedWriter bw1_1;
        try {
            bw1_1 = new BufferedWriter(new FileWriter(archivo3)); //filewrite esrescribe dentro del archivo
             bw1_1.write("# -------------------------------------------------------------------------- #\n" +
"#\n" +
"# Copyright (C) 1991-2014 Altera Corporation. All rights reserved.\n" +
"# Your use of Altera Corporation's design tools, logic functions \n" +
"# and other software and tools, and its AMPP partner logic \n" +
"# functions, and any output files from any of the foregoing \n" +
"# (including device programming or simulation files), and any \n" +
"# associated documentation or information are expressly subject \n" +
"# to the terms and conditions of the Altera Program License \n" +
"# Subscription Agreement, the Altera Quartus II License Agreement,\n" +
"# the Altera MegaCore Function License Agreement, or other \n" +
"# applicable license agreement, including, without limitation, \n" +
"# that your use is for the sole purpose of programming logic \n" +
"# devices manufactured by Altera and sold by Altera or its \n" +
"# authorized distributors.  Please refer to the applicable \n" +
"# agreement for further details.\n" +
"#\n" +
"# -------------------------------------------------------------------------- #\n" +
"#\n" +
"# Quartus II 64-Bit\n" +
"# Version 14.0.2 Build 209 09/17/2014 SJ Web Edition\n" +
"# Date created = 18:53:12  March 12, 2015\n" +
"#\n" +
"# -------------------------------------------------------------------------- #\n" +
"\n" +
"QUARTUS_VERSION = \"14.0\"\n" +
"DATE = \"18:53:12  March 12, 2015\"\n" +
"\n" +
"# Revisions\n" +
"\n" +
"PROJECT_REVISION = \""+textField1.getText()+"\"");
             bw1_1.close();

        } catch (IOException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
           
            
   
           
            
           
            
      
        
     
     
     JOptionPane.showMessageDialog(null,"Se guardo en  : " +directorio.getAbsoluteFile(), "Informacion!!",JOptionPane.WARNING_MESSAGE,new ImageIcon(archivar.class.getResource("imagenes/305105.gif")));

         

           
      textField1.setText("");
      


    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    public void juju()
    {
    archivar a = new archivar();
    
    
        if(jCheckBox1.isSelected()==true)
        {
        
        a.paint_01(jLabel1.getGraphics());
        
        }if(jCheckBox6.isSelected() == true)
        {
        
        a.pant_02(jLabel1.getGraphics());
        
        }
    repaint();
    }
    
    
    
    
    
    
    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
archivar ar  =new archivar();
        
      if(jCheckBox1.isSelected())
        {
          
  
        ar.led_8(jLabel1.getGraphics()); 
        }
        else{
           
      
          
            
      }
             
// TODO add your handling code here:


    }//GEN-LAST:event_jCheckBox1ActionPerformed



    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
 

       archivar ar  =new archivar();

  if(jCheckBox6.isSelected() ==true)
  {
        ar.paint_01(jLabel1.getGraphics());
       
  }else
  {
//  repaint(200, 85, 25, 340);

       repaint(185, 85, 25, 340);
  }
  

       /* if(jCheckBox6.setSelected(true) = true)
        {
        }
    */


// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed

archivar ar = new archivar();
if(jCheckBox7.isSelected() == true)
{
ar.pant_02(jLabel1.getGraphics());

}else
{
   
  
 //   repaint(10, 85, 25, 340);

}

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed

         archivar ar = new archivar();
        ar.paint_03(jLabel1.getGraphics());
        
       /* if(jCheckBox8.isSelected()== true)
        {
       
ar.paint_03(jLabel1.getGraphics(),jCheckBox8.isSelected());
        }
        else
        {
        
           // repaint(100, 2,10,15);
        
        }*/

       

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
archivar ar = new archivar();
ar.puerto_b(jLabel1.getGraphics());        

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed

       archivar ar = new archivar();
        ar.puerto_a(jLabel1.getGraphics());


// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed

        
        
archivar ar = new archivar();
ar.puerto_d(jLabel1.getGraphics());

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
archivar ar = new archivar();
ar.puerto_c(jLabel1.getGraphics());  

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
repaint();
jCheckBox6.setSelected(false);
jCheckBox7.setSelected(false);
jCheckBox1.setSelected(false);
jCheckBox10.setSelected(false);
jCheckBox3.setSelected(false);
jCheckBox11.setSelected(false);
jCheckBox9.setSelected(false);
jCheckBox8.setSelected(false);
jCheckBox1.setSelected(false);
jCheckBox15.setSelected(false);
jCheckBox12.setSelected(false);
jCheckBox2.setSelected(false);
jCheckBox13.setSelected(false);
jCheckBox16.setSelected(false);

jCheckBox5.setSelected(false);
jCheckBox14.setSelected(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
 archivar ar = new archivar();
 ar.sdram(jLabel1.getGraphics());
        

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
archivar ar = new archivar();
ar.interup(jLabel1.getGraphics());
        
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed

        

        archivar ar = new archivar();
ar.pain_back_2(jLabel1.getGraphics());



// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed

archivar ar = new archivar();
ar.pain_back_1(jLabel1.getGraphics());
        
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
        archivar ar = new archivar();

     
    
      ar.pain_back_3(jLabel1.getGraphics());

     
     
  
       

       
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed

     

// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
                   
         
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
